"use client";
import { Provider } from "react-redux";
import { store } from "@/store/store";
import {QueryClient,QueryClientProvider} from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider"
import { LayoutDashboard } from "lucide-react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { LogOut } from "lucide-react";
import { useDispatch } from "react-redux";
import { AppProviders } from "./providers";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

 const metadata = {
  title: "AVM Smiles",
  description: "Generated by create next app",
};


const queryClient = new QueryClient();

export default function RootLayout({ children }) {
    const [region, setRegion] = useState("0");
    const [period, setPeriod] = useState("All");



     const periods = [
        { id: "D1", label: "Yesterday" },
        { id: "W1", label: "Last 7 Days" },
        { id: "M1", label: "30 Days" },
        { id: "Q1", label: "90 Days" },
        { id: "Y1", label: "365 Days" },
        { id: "All", label: "Grouped" },
      ];
         const handleLogout = () => {
  // Example logic â€” adjust for your app
  localStorage.removeItem("token");
    router.push("/"); 
};

  return (
      <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
           <AppProviders>
           
        {children}
        <ReactQueryDevtools initialIsOpen={false} />
     </AppProviders>

      </body>
    </html>
  );
}
